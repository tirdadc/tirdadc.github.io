<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[tirdadc]]></title>
  <link href="http://tirdadc.github.io/atom.xml" rel="self"/>
  <link href="http://tirdadc.github.io/"/>
  <updated>2015-11-25T19:27:22-05:00</updated>
  <id>http://tirdadc.github.io/</id>
  <author>
    <name><![CDATA[tirdadc]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[DRYing Up Your Rspecs With Shared Examples and Shared Contexts]]></title>
    <link href="http://tirdadc.github.io/blog/2015/11/25/drying-up-your-rspecs-with-shared-examples-and-shared-contexts/"/>
    <updated>2015-11-25T18:35:22-05:00</updated>
    <id>http://tirdadc.github.io/blog/2015/11/25/drying-up-your-rspecs-with-shared-examples-and-shared-contexts</id>
    <content type="html"><![CDATA[<p>This is an example of how to use <a href="https://www.relishapp.com/rspec/rspec-core/docs/example-groups/shared-context">shared contexts</a> and <a href="https://www.relishapp.com/rspec/rspec-core/v/3-4/docs/example-groups/shared-examples">shared examples</a> to refactor your <a href="http://rspec.info/">specs</a>.</p>

<p>We have a Merchant model and a User model. We want to test 3 instance methods on Merchant that:</p>

<ul>
<li>change the merchant&rsquo;s state</li>
<li>fire off an associated email</li>
</ul>


<p>Let&rsquo;s take the most naive approach and write 3 individual tests for these methods:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">describe</span> <span class="s1">&#39;#block&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">let</span><span class="p">(</span><span class="ss">:merchant</span><span class="p">)</span> <span class="p">{</span> <span class="n">build</span><span class="p">(</span><span class="ss">:merchant</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">let</span><span class="p">(</span><span class="ss">:billing_manager</span><span class="p">)</span> <span class="p">{</span> <span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">,</span> <span class="ss">:manager</span><span class="p">,</span> <span class="ss">merchant</span><span class="p">:</span> <span class="n">merchant</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">merchant</span><span class="o">.</span><span class="n">billing_user</span> <span class="o">=</span> <span class="n">billing_manager</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s1">&#39;sets the merchant state to blocked&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">merchant</span><span class="o">.</span><span class="n">block</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">merchant</span><span class="o">.</span><span class="n">blocked?</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be</span> <span class="kp">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s1">&#39;send an email notification&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">expect</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">merchant</span><span class="o">.</span><span class="n">block</span>
</span><span class='line'>    <span class="p">}</span><span class="o">.</span><span class="n">to</span> <span class="n">change</span><span class="p">(</span><span class="no">ActionMailer</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">deliveries</span><span class="p">,</span> <span class="ss">:count</span><span class="p">)</span><span class="o">.</span><span class="n">by</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">describe</span> <span class="s1">&#39;#unblock&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">let</span><span class="p">(</span><span class="ss">:merchant</span><span class="p">)</span> <span class="p">{</span> <span class="n">build</span><span class="p">(</span><span class="ss">:merchant</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">let</span><span class="p">(</span><span class="ss">:billing_manager</span><span class="p">)</span> <span class="p">{</span> <span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">,</span> <span class="ss">:manager</span><span class="p">,</span> <span class="ss">merchant</span><span class="p">:</span> <span class="n">merchant</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>    <span class="c1"># only a blocked user can be unblocked</span>
</span><span class='line'>    <span class="n">merchant</span><span class="o">.</span><span class="n">block</span>
</span><span class='line'>    <span class="n">merchant</span><span class="o">.</span><span class="n">billing_user</span> <span class="o">=</span> <span class="n">billing_manager</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s1">&#39;sets the merchant state to active&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">merchant</span><span class="o">.</span><span class="n">unblock</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">merchant</span><span class="o">.</span><span class="n">active?</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be</span> <span class="kp">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s1">&#39;send an email notification&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">expect</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">merchant</span><span class="o">.</span><span class="n">unblock</span>
</span><span class='line'>    <span class="p">}</span><span class="o">.</span><span class="n">to</span> <span class="n">change</span><span class="p">(</span><span class="no">ActionMailer</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">deliveries</span><span class="p">,</span> <span class="ss">:count</span><span class="p">)</span><span class="o">.</span><span class="n">by</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">describe</span> <span class="s1">&#39;#deactivate&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">let</span><span class="p">(</span><span class="ss">:merchant</span><span class="p">)</span> <span class="p">{</span> <span class="n">build</span><span class="p">(</span><span class="ss">:merchant</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">let</span><span class="p">(</span><span class="ss">:billing_manager</span><span class="p">)</span> <span class="p">{</span> <span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">,</span> <span class="ss">:manager</span><span class="p">,</span> <span class="ss">merchant</span><span class="p">:</span> <span class="n">merchant</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">merchant</span><span class="o">.</span><span class="n">billing_user</span> <span class="o">=</span> <span class="n">billing_manager</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s1">&#39;sets the merchant state to deactivated&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">merchant</span><span class="o">.</span><span class="n">deactivate</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">merchant</span><span class="o">.</span><span class="n">deactivated?</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be</span> <span class="kp">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s1">&#39;send an email notification&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">expect</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">merchant</span><span class="o">.</span><span class="n">deactivate</span>
</span><span class='line'>    <span class="p">}</span><span class="o">.</span><span class="n">to</span> <span class="n">change</span><span class="p">(</span><span class="no">ActionMailer</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">deliveries</span><span class="p">,</span> <span class="ss">:count</span><span class="p">)</span><span class="o">.</span><span class="n">by</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>You&rsquo;re testing the same things on all 3 methods, so you can leverage shared examples to rewrite that in a way where you don&rsquo;t repeat that. You also want to pass both the action to trigger and the new state to test as parameters to your shared example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">shared_examples_for</span> <span class="s1">&#39;a merchant state change&#39;</span> <span class="k">do</span> <span class="o">|</span><span class="n">action</span><span class="p">,</span> <span class="n">new_state</span><span class="o">|</span>
</span><span class='line'>  <span class="n">it</span> <span class="s2">&quot;sets the merchant state to </span><span class="si">#{</span><span class="n">new_state</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">merchant</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">action</span><span class="p">)</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">merchant</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">new_state</span><span class="si">}</span><span class="s2">?&quot;</span><span class="p">))</span><span class="o">.</span><span class="n">to</span> <span class="n">be</span> <span class="kp">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s1">&#39;sends an email notification&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">expect</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">merchant</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">action</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span><span class="o">.</span><span class="n">to</span> <span class="n">change</span><span class="p">(</span><span class="no">ActionMailer</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">deliveries</span><span class="p">,</span> <span class="ss">:count</span><span class="p">)</span><span class="o">.</span><span class="n">by</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">describe</span> <span class="s1">&#39;#block&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">let</span><span class="p">(</span><span class="ss">:merchant</span><span class="p">)</span> <span class="p">{</span> <span class="n">build</span><span class="p">(</span><span class="ss">:merchant</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">let</span><span class="p">(</span><span class="ss">:billing_manager</span><span class="p">)</span> <span class="p">{</span> <span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">,</span> <span class="ss">:manager</span><span class="p">,</span> <span class="ss">merchant</span><span class="p">:</span> <span class="n">merchant</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">merchant</span><span class="o">.</span><span class="n">billing_user</span> <span class="o">=</span> <span class="n">billing_manager</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it_behaves_like</span> <span class="s1">&#39;a merchant state change&#39;</span><span class="p">,</span> <span class="s1">&#39;block&#39;</span><span class="p">,</span> <span class="s1">&#39;blocked&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">describe</span> <span class="s1">&#39;#unblock&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">let</span><span class="p">(</span><span class="ss">:merchant</span><span class="p">)</span> <span class="p">{</span> <span class="n">build</span><span class="p">(</span><span class="ss">:merchant</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">let</span><span class="p">(</span><span class="ss">:billing_manager</span><span class="p">)</span> <span class="p">{</span> <span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">,</span> <span class="ss">:manager</span><span class="p">,</span> <span class="ss">merchant</span><span class="p">:</span> <span class="n">merchant</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">merchant</span><span class="o">.</span><span class="n">billing_user</span> <span class="o">=</span> <span class="n">billing_manager</span>
</span><span class='line'>    <span class="n">merchant</span><span class="o">.</span><span class="n">block</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it_behaves_like</span> <span class="s1">&#39;a merchant state change&#39;</span><span class="p">,</span> <span class="s1">&#39;unblock&#39;</span><span class="p">,</span> <span class="s1">&#39;active&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">describe</span> <span class="s1">&#39;#deactivate&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">let</span><span class="p">(</span><span class="ss">:merchant</span><span class="p">)</span> <span class="p">{</span> <span class="n">build</span><span class="p">(</span><span class="ss">:merchant</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">let</span><span class="p">(</span><span class="ss">:billing_manager</span><span class="p">)</span> <span class="p">{</span> <span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">,</span> <span class="ss">:manager</span><span class="p">,</span> <span class="ss">merchant</span><span class="p">:</span> <span class="n">merchant</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">merchant</span><span class="o">.</span><span class="n">billing_user</span> <span class="o">=</span> <span class="n">billing_manager</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it_behaves_like</span> <span class="s1">&#39;a merchant state change&#39;</span><span class="p">,</span> <span class="s1">&#39;deactivate&#39;</span><span class="p">,</span> <span class="s1">&#39;deactivated&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now that you&rsquo;ve done that, you want to avoid repeating the setup portion for these tests. You can do that with <a href="https://www.relishapp.com/rspec/rspec-core/docs/example-groups/shared-context">shared contexts</a>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">shared_examples_for</span> <span class="s1">&#39;a merchant state change&#39;</span> <span class="k">do</span> <span class="o">|</span><span class="n">action</span><span class="p">,</span> <span class="n">new_state</span><span class="o">|</span>
</span><span class='line'>  <span class="n">it</span> <span class="s2">&quot;sets the merchant state to </span><span class="si">#{</span><span class="n">new_state</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">merchant</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">action</span><span class="p">)</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">merchant</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">new_state</span><span class="si">}</span><span class="s2">?&quot;</span><span class="p">))</span><span class="o">.</span><span class="n">to</span> <span class="n">be</span> <span class="kp">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s1">&#39;sends an email notification&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">expect</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">merchant</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">action</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span><span class="o">.</span><span class="n">to</span> <span class="n">change</span><span class="p">(</span><span class="no">ActionMailer</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">deliveries</span><span class="p">,</span> <span class="ss">:count</span><span class="p">)</span><span class="o">.</span><span class="n">by</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">shared_context</span> <span class="s1">&#39;has a merchant and a billing manager&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">let</span><span class="p">(</span><span class="ss">:merchant</span><span class="p">)</span> <span class="p">{</span> <span class="n">build</span><span class="p">(</span><span class="ss">:merchant</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">let</span><span class="p">(</span><span class="ss">:billing_manager</span><span class="p">)</span> <span class="p">{</span> <span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">,</span> <span class="ss">:manager</span><span class="p">,</span> <span class="ss">merchant</span><span class="p">:</span> <span class="n">merchant</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">merchant</span><span class="o">.</span><span class="n">billing_user</span> <span class="o">=</span> <span class="n">billing_manager</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">describe</span> <span class="s1">&#39;#block&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">include_context</span> <span class="s1">&#39;has a merchant and a billing manager&#39;</span>
</span><span class='line'>  <span class="n">it_behaves_like</span> <span class="s1">&#39;a merchant state change&#39;</span><span class="p">,</span> <span class="s1">&#39;block&#39;</span><span class="p">,</span> <span class="s1">&#39;blocked&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">describe</span> <span class="s1">&#39;#unblock&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">include_context</span> <span class="s1">&#39;has a merchant and a billing manager&#39;</span>
</span><span class='line'>  <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">merchant</span><span class="o">.</span><span class="n">block</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it_behaves_like</span> <span class="s1">&#39;a merchant state change&#39;</span><span class="p">,</span> <span class="s1">&#39;unblock&#39;</span><span class="p">,</span> <span class="s1">&#39;active&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">describe</span> <span class="s1">&#39;#deactivate&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">include_context</span> <span class="s1">&#39;has a merchant and a billing manager&#39;</span>
</span><span class='line'>  <span class="n">it_behaves_like</span> <span class="s1">&#39;a merchant state change&#39;</span><span class="p">,</span> <span class="s1">&#39;deactivate&#39;</span><span class="p">,</span> <span class="s1">&#39;deactivated&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>You&rsquo;re now down from 61 lines to 40, and it just looks less copy-paste happy. You can also move out your shared contexts to separate files and reuse them in different specs. The only immediate downside is that the line numbering is a bit less informative with shared examples compared to distinct specs.</p>

<p>Like anything DRY-related, use this responsibly and don&rsquo;t create a nightmare bizarro world of obfuscated tests.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Redis, Monit and Sidekiq 4 for Rails]]></title>
    <link href="http://tirdadc.github.io/blog/2015/11/18/redis-monit-sidekiq-for-rails/"/>
    <updated>2015-11-18T09:05:48-05:00</updated>
    <id>http://tirdadc.github.io/blog/2015/11/18/redis-monit-sidekiq-for-rails</id>
    <content type="html"><![CDATA[<p>I recently upgraded my <a href="https://github.com/mperham/sidekiq">Sidekiq</a> version to 4.0.0, which required upgrading my rather ancient version of Redis on my production environment. I had already set up Monit, but I&rsquo;ll cover the steps to get that up and running too.</p>

<h1>Monit</h1>

<p><a href="https://mmonit.com/monit/">Monit</a> is a small Open Source utility for managing and monitoring Unix systems. We&rsquo;re going to use it to insure that Redis is always running, and restarted if the process goes down or the server gets rebooted.</p>

<h2>Install Monit</h2>

<p><code>$ sudo apt-get install monit</code></p>

<h2>Configure Monit</h2>

<p>Your main monit configuration file will be in <code>/etc/monit/monitrc</code>, and you&rsquo;re going to add a <code>redis.conf</code> file under <code>/etc/monit/conf.d/</code>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># /etc/monit/conf.d/redis.conf
</span><span class='line'>check process redis-server with pidfile "/var/run/redis/redis-server.pid"
</span><span class='line'>  start program = "/usr/local/bin/redis-server /etc/redis/redis.conf"
</span><span class='line'>  stop program = "/usr/local/bin/redis-cli shutdown"
</span><span class='line'>  if failed host 127.0.0.1 port 6379 then restart
</span><span class='line'>  if 5 restarts within 5 cycles then timeout</span></code></pre></td></tr></table></div></figure>


<h1>Redis 3.0.5</h1>

<p><a href="http://redis.io/topics/quickstart">Installing Redis</a> is pretty simple but you need to build it on Ubuntu to get the latest version:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ wget http://download.redis.io/releases/redis-3.0.5.tar.gz
</span><span class='line'>$ tar xzf redis-3.0.5.tar.gz
</span><span class='line'>$ cd redis-3.0.5
</span><span class='line'>$ make</span></code></pre></td></tr></table></div></figure>


<p>you can also run <code>make test</code> to verify that everything checks out.</p>

<p>Once that is done, copy the files to <code>/usr/local/bin</code> and make sure you copy the new redis.conf to its appropriate location:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo cp src/redis-server /usr/local/bin/
</span><span class='line'>$ sudo cp src/redis-cli /usr/local/bin/
</span><span class='line'>$ sudo cp redis.conf /etc/redis/redis.conf</span></code></pre></td></tr></table></div></figure>


<p>redis-cli is the command line tool, redis-server is what we&rsquo;ll be starting with Monit.</p>

<h1>Tying them together</h1>

<p>You want monit to reload the configuration changes and to restart the redis-server:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo monit reload
</span><span class='line'>$ sudo monit restart redis-server</span></code></pre></td></tr></table></div></figure>


<p>You can see the output of the monit log at <code>/var/log/monit.log</code> to make sure everything is OK, or you can also use:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo monit status</span></code></pre></td></tr></table></div></figure>


<p>I noticed these warnings:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>15377:M 18 Nov 12:29:31.725 # You requested maxclients of 10000 requiring at least 10032 max file descriptors.
</span><span class='line'>15377:M 18 Nov 12:29:31.725 # Redis can't set maximum open files to 10032 because of OS error: Operation not permitted.
</span><span class='line'>15377:M 18 Nov 12:29:31.725 # Current maximum open files is 4096. maxclients has been reduced to 4064 to compensate for low ulimit. If you need higher maxclients increase 'ulimit -n'.
</span><span class='line'>15377:M 18 Nov 12:29:31.726 # Warning: 32 bit instance detected but no memory limit set. Setting 3 GB maxmemory limit with 'noeviction' policy now.
</span><span class='line'>                _._
</span><span class='line'>           _.-``__ ''-._
</span><span class='line'>      _.-``    `.  `_.  ''-._           Redis 3.0.5 (00000000/0) 32 bit
</span><span class='line'>  .-`` .-```.  ```\/    _.,_ ''-._
</span><span class='line'> (    '      ,       .-`  | `,    )     Running in standalone mode
</span><span class='line'> |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379
</span><span class='line'> |    `-._   `._    /     _.-'    |     PID: 15377
</span><span class='line'>  `-._    `-._  `-./  _.-'    _.-'
</span><span class='line'> |`-._`-._    `-.__.-'    _.-'_.-'|
</span><span class='line'> |    `-._`-._        _.-'_.-'    |           http://redis.io
</span><span class='line'>  `-._    `-._`-.__.-'_.-'    _.-'
</span><span class='line'> |`-._`-._    `-.__.-'    _.-'_.-'|
</span><span class='line'> |    `-._`-._        _.-'_.-'    |
</span><span class='line'>  `-._    `-._`-.__.-'_.-'    _.-'
</span><span class='line'>      `-._    `-.__.-'    _.-'
</span><span class='line'>          `-._        _.-'
</span><span class='line'>              `-.__.-'
</span><span class='line'>
</span><span class='line'>15377:M 18 Nov 12:29:31.726 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.
</span><span class='line'>15377:M 18 Nov 12:29:31.727 # Server started, Redis version 3.0.5
</span><span class='line'>15377:M 18 Nov 12:29:31.727 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.</span></code></pre></td></tr></table></div></figure>


<p>To fix these warnings:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo sysctl -w net.core.somaxconn=65535
</span><span class='line'>$ sudo sysctl -w vm.overcommit_memory=1
</span><span class='line'>$ sudo sh -c "ulimit -n 10032 && exec su $LOGNAME"</span></code></pre></td></tr></table></div></figure>


<p>edit
and edit your /etc/redis/redis.conf to set the following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>maxmemory 2mb
</span><span class='line'>maxmemory-policy allkeys-lru</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[React.js: Firefox Issue With onBlur]]></title>
    <link href="http://tirdadc.github.io/blog/2015/06/11/react-dot-js-firefox-issue-with-onblur/"/>
    <updated>2015-06-11T07:38:30-04:00</updated>
    <id>http://tirdadc.github.io/blog/2015/06/11/react-dot-js-firefox-issue-with-onblur</id>
    <content type="html"><![CDATA[<p>This started as a simple enough component to build in <a href="https://facebook.github.io/react/">React.js</a>: a text block that becomes an editable input when you click on it and reverts to text on the blur event.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">InputField</span> <span class="o">=</span> <span class="nx">React</span><span class="p">.</span><span class="nx">createClass</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">getInitialState</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">value</span><span class="o">:</span>  <span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">active</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">updateValue</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">e</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">setState</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">value</span><span class="o">:</span> <span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">value</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">handleClick</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">setState</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">active</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">onBlur</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">setState</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">active</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">active</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="p">(</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">input</span>
</span><span class='line'>          <span class="nx">type</span><span class="o">=</span><span class="s1">&#39;text&#39;</span>
</span><span class='line'>          <span class="nx">value</span><span class="o">=</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">value</span><span class="p">}</span>
</span><span class='line'>          <span class="nx">onChange</span><span class="o">=</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">updateValue</span><span class="p">}</span>
</span><span class='line'>          <span class="nx">autoFocus</span><span class="o">=</span><span class="p">{</span><span class="kc">true</span><span class="p">}</span>
</span><span class='line'>          <span class="nx">onBlur</span><span class="o">=</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">onBlur</span><span class="p">}</span> <span class="o">/&gt;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="p">(</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="nx">span</span> <span class="nx">onClick</span><span class="o">=</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">handleClick</span><span class="p">}</span><span class="o">&gt;</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">value</span><span class="p">}</span><span class="o">&lt;</span><span class="err">/span&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span><span class='line'>      <span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="nx">React</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="o">&lt;</span><span class="nx">InputField</span> <span class="nx">value</span><span class="o">=</span><span class="s2">&quot;click me to edit me&quot;</span> <span class="o">/&gt;</span><span class="p">,</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;container&#39;</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure>


<p>This works perfectly fine in Chrome and Safari, but due to some <a href="https://www.google.com/search?q=firefox+onblur+bug">potential bug</a>, Firefox triggers the onBlur on the initial click on the text, reverting the active flag to false and preventing the input from ever being rendered.</p>

<p>This can be fixed by adding this to onBlur:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">onBlur</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// Firefox issue</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">nativeEvent</span><span class="p">.</span><span class="nx">explicitOriginalTarget</span> <span class="o">&amp;&amp;</span>
</span><span class='line'>      <span class="nx">e</span><span class="p">.</span><span class="nx">nativeEvent</span><span class="p">.</span><span class="nx">explicitOriginalTarget</span> <span class="o">==</span> <span class="nx">e</span><span class="p">.</span><span class="nx">nativeEvent</span><span class="p">.</span><span class="nx">originalTarget</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">setState</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">active</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>JSFiddle: <a href="http://jsfiddle.net/gmk316qd/1/">http://jsfiddle.net/gmk316qd/1/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Upgrading to Ruby 2.2.1 With Rbenv and RVM]]></title>
    <link href="http://tirdadc.github.io/blog/2015/03/06/upgrading-to-ruby-2-dot-2-1-with-rbenv-and-rvm/"/>
    <updated>2015-03-06T18:14:36-05:00</updated>
    <id>http://tirdadc.github.io/blog/2015/03/06/upgrading-to-ruby-2-dot-2-1-with-rbenv-and-rvm</id>
    <content type="html"><![CDATA[<p>Another one of those brief utilitarian blog posts for myself.</p>

<p>rbenv:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rbenv install -l
</span><span class='line'>rbenv install 2.2.1
</span><span class='line'>rbenv <span class="nb">local </span>2.2.1
</span><span class='line'>rbenv rehash
</span><span class='line'>gem install bundler
</span><span class='line'>bundle install
</span></code></pre></td></tr></table></div></figure>


<p>RVM:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rvm install 2.2.1
</span><span class='line'>rvm use 2.2.1
</span><span class='line'>bundle install
</span></code></pre></td></tr></table></div></figure>


<p>Since Passenger is made aware of which Ruby to use, update the vhost entry too:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># /etc/apache2/sites-enabled/example.com</span>
</span><span class='line'>PassengerRuby /home/johndoe/.rvm/wrappers/ruby-2.2.1/ruby
</span></code></pre></td></tr></table></div></figure>


<p>and you then have to restart Apache:
<code>sudo apache2ctl graceful</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mongo, Mongoid and Rails 4.1]]></title>
    <link href="http://tirdadc.github.io/blog/2014/09/22/mongo-mongoid-and-rails-4.1/"/>
    <updated>2014-09-22T22:41:22-04:00</updated>
    <id>http://tirdadc.github.io/blog/2014/09/22/mongo-mongoid-and-rails-4.1</id>
    <content type="html"><![CDATA[<p>I typically forget to set the <code>&ndash;skip-active-record</code> when creating a new app, so this is the
little kabuki dance you need to perform to get <a href="http://mongoid.org">Mongoid</a> to play nice with a freshly
created Rails 4.1 project.</p>

<ol>
<li><p>Add mongoid to your Gemfile:<br>
<code>gem &lsquo;mongoid&rsquo;, &lsquo;~> 4.0.0&rsquo;</code></p></li>
<li><p>Generate your <code>mongoid.yml</code> configuration file:<br>
<code>rails g mongoid:config</code></p></li>
<li><p>Remove the sqlite gem now from your Gemfile:<br>
<code>gem &lsquo;sqlite3&rsquo;</code></p></li>
<li><p>Delete <code>database.yml</code></p></li>
<li><p>Remove any lines that reference active_record from your environment files:</p></li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># development.rb</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">active_record</span><span class="o">.</span><span class="n">migration_error</span> <span class="o">=</span> <span class="ss">:page_load</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># production.rb</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">active_record</span><span class="o">.</span><span class="n">dump_schema_after_migration</span> <span class="o">=</span> <span class="kp">false</span>
</span></code></pre></td></tr></table></div></figure>


<p><span>6.</span> Change this in your <code>application.rb</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rails/all&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>to:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;action_controller/railtie&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;action_mailer/railtie&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;sprockets/railtie&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Updating Your Ubuntu Packages]]></title>
    <link href="http://tirdadc.github.io/blog/2014/09/17/updating-your-ubuntu-packages/"/>
    <updated>2014-09-17T15:04:37-04:00</updated>
    <id>http://tirdadc.github.io/blog/2014/09/17/updating-your-ubuntu-packages</id>
    <content type="html"><![CDATA[<p><code>sudo apt-get update</code><br>
Update source list.</p>

<p><code>sudo apt-get upgrade</code><br>
Upgrade all installed packages.</p>

<p><code>sudo apt-get autoclean</code><br>
Remove unused .deb files for packages that are no longer installed.</p>

<p><a href="https://help.ubuntu.com/community/AptGet/Howto">Source</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nested Feature Tests With Capybara and RSpec]]></title>
    <link href="http://tirdadc.github.io/blog/2014/09/11/nested-feature-tests-with-capybara-and-rspec/"/>
    <updated>2014-09-11T15:46:00-04:00</updated>
    <id>http://tirdadc.github.io/blog/2014/09/11/nested-feature-tests-with-capybara-and-rspec</id>
    <content type="html"><![CDATA[<p>I recently wrote some automated user acceptance tests with <a href="https://github.com/jnicklas/capybara">Capybara</a> for a multi-step wizard, and the initial approach didn&rsquo;t seem very DRY. I was rehashing the steps involved in previous scenarios to reach whatever step was currently being tested, and I was combining multiple expectations at various steps:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">feature</span> <span class="s1">&#39;User creates a thing&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="no">Capybara</span><span class="o">.</span><span class="n">javascript_driver</span> <span class="o">=</span> <span class="ss">:poltergeist</span>
</span><span class='line'>  <span class="no">WebMock</span><span class="o">.</span><span class="n">disable_net_connect!</span><span class="p">(</span><span class="ss">:allow_localhost</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">background</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">user_login</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">scenario</span> <span class="s1">&#39;Step 0: User signs in&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">page</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">have_content</span><span class="p">(</span><span class="s1">&#39;Signed in successfully.&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">scenario</span> <span class="s1">&#39;Step 1: selects A, continues, reaches Step 2&#39;</span><span class="p">,</span> <span class="ss">:js</span> <span class="o">=&gt;</span> <span class="kp">true</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">visit</span><span class="p">(</span><span class="s1">&#39;/wizard/type&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">page</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">have_content</span><span class="p">(</span><span class="s1">&#39;Step 1&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">find</span><span class="p">(</span><span class="s1">&#39;.type-a&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">click</span>
</span><span class='line'>    <span class="n">find</span><span class="p">(</span><span class="s1">&#39;.continue&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">click</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">page</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">have_content</span><span class="p">(</span><span class="s1">&#39;Step 2&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">scenario</span> <span class="s1">&#39;Step 2: picks name, continues, reaches Step 3&#39;</span><span class="p">,</span> <span class="ss">:js</span> <span class="o">=&gt;</span> <span class="kp">true</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">visit</span><span class="p">(</span><span class="s1">&#39;/wizard/type&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">find</span><span class="p">(</span><span class="s1">&#39;.type-a&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">click</span>
</span><span class='line'>    <span class="n">find</span><span class="p">(</span><span class="s1">&#39;.continue&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">click</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">page</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">have_content</span><span class="p">(</span><span class="s1">&#39;Step 2&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">fill_in</span> <span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="ss">with</span><span class="p">:</span> <span class="s1">&#39;Funeralopolis&#39;</span>
</span><span class='line'>    <span class="n">find</span><span class="p">(</span><span class="s1">&#39;.continue&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">click</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">page</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">have_content</span><span class="p">(</span><span class="s1">&#39;Step 3&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><br>
Thankfully you can <a href="https://github.com/jnicklas/capybara/commit/61524b0fd32a1fb55b82853bdc4a0293e9fcdef0">nest features since the 2.2.1 version</a>, which allows you to better separate the tests and setups while sequentially continuing from whatever state the previous test left you in:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">feature</span> <span class="s1">&#39;User creates a thing&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="no">Capybara</span><span class="o">.</span><span class="n">javascript_driver</span> <span class="o">=</span> <span class="ss">:poltergeist</span>
</span><span class='line'>  <span class="no">WebMock</span><span class="o">.</span><span class="n">disable_net_connect!</span><span class="p">(</span><span class="ss">:allow_localhost</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">background</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">user_login</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">scenario</span> <span class="s1">&#39;Step 0: User signs in&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">page</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">have_content</span><span class="p">(</span><span class="s1">&#39;Signed in successfully.&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">feature</span> <span class="s1">&#39;Step 1: Type&#39;</span><span class="p">,</span> <span class="ss">:js</span> <span class="o">=&gt;</span> <span class="kp">true</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">background</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">visit</span><span class="p">(</span><span class="s1">&#39;/wizard/type&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">scenario</span> <span class="s1">&#39;it is on Step 1&#39;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">page</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">have_content</span><span class="p">(</span><span class="s1">&#39;Step 1&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">feature</span> <span class="s1">&#39;it selects A, continues, reaches Step 2&#39;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">background</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">find</span><span class="p">(</span><span class="s1">&#39;.type-a&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">click</span>
</span><span class='line'>        <span class="n">find</span><span class="p">(</span><span class="s1">&#39;.continue&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">click</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">scenario</span> <span class="s1">&#39;it reaches Step 2&#39;</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">expect</span><span class="p">(</span><span class="n">page</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">have_content</span><span class="p">(</span><span class="s1">&#39;Step 2&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">feature</span> <span class="s1">&#39;Step 2: Name&#39;</span><span class="p">,</span> <span class="ss">:js</span> <span class="o">=&gt;</span> <span class="kp">true</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">background</span> <span class="k">do</span>
</span><span class='line'>          <span class="n">fill_in</span> <span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="ss">with</span><span class="p">:</span> <span class="s1">&#39;Funeralopolis&#39;</span>
</span><span class='line'>          <span class="n">find</span><span class="p">(</span><span class="s1">&#39;.continue&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">click</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">scenario</span> <span class="s1">&#39;it reaches Step 3&#39;</span> <span class="k">do</span>
</span><span class='line'>          <span class="n">expect</span><span class="p">(</span><span class="n">page</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">have_content</span><span class="p">(</span><span class="s1">&#39;Step 3&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
